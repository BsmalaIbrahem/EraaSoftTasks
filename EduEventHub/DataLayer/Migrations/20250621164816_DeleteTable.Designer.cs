// <auto-generated />
using System;
using DataLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250621164816_DeleteTable")]
    partial class DeleteTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataLayer.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 975, DateTimeKind.Utc).AddTicks(7209),
                            Description = "Hands-on learning sessions",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Workshops",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 975, DateTimeKind.Utc).AddTicks(7214)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 975, DateTimeKind.Utc).AddTicks(7961),
                            Description = "Educational talks by experts",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Lectures",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 975, DateTimeKind.Utc).AddTicks(7962)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 975, DateTimeKind.Utc).AddTicks(7964),
                            Description = "Cultural and scientific displays",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Exhibitions",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 975, DateTimeKind.Utc).AddTicks(7964)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 975, DateTimeKind.Utc).AddTicks(8018),
                            Description = "Multi-day events with multiple speakers",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Conferences",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 975, DateTimeKind.Utc).AddTicks(8018)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 975, DateTimeKind.Utc).AddTicks(8019),
                            Description = "Focused discussions on specific topics",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Seminars",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 975, DateTimeKind.Utc).AddTicks(8020)
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(280),
                            Description = "A hands-on workshop to learn Python programming from scratch.",
                            EndDate = new DateTime(2024, 10, 16, 16, 0, 0, 0, DateTimeKind.Utc),
                            ImgPath = "assets/images/gallery/gallery-less-eight.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Price = 50.0,
                            StartDate = new DateTime(2024, 10, 15, 10, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Python Workshop",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(283)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(2272),
                            Description = "Explore the future of artificial intelligence with leading experts.",
                            EndDate = new DateTime(2025, 1, 20, 17, 0, 0, 0, DateTimeKind.Utc),
                            ImgPath = "assets/images/gallery/gallery-full-seven.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Price = 30.0,
                            StartDate = new DateTime(2025, 1, 20, 14, 0, 0, 0, DateTimeKind.Utc),
                            Title = "AI Lecture Series",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(2272)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(2277),
                            Description = "Showcasing the latest innovations in technology.",
                            EndDate = new DateTime(2025, 6, 12, 18, 0, 0, 0, DateTimeKind.Utc),
                            ImgPath = "assets/images/background/cta-ticket-bg.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Price = 20.0,
                            StartDate = new DateTime(2025, 6, 10, 9, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Tech Exhibition 2025",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(2277)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(2280),
                            Description = "A conference on cloud solutions and scalability.",
                            EndDate = new DateTime(2023, 11, 7, 17, 0, 0, 0, DateTimeKind.Utc),
                            ImgPath = "assets/images/background/homepage-one-banner.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Price = 100.0,
                            StartDate = new DateTime(2023, 11, 5, 9, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Cloud Computing Conference",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(2280)
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(2282),
                            Description = "Learn about the latest trends in cybersecurity.",
                            EndDate = new DateTime(2026, 3, 15, 15, 0, 0, 0, DateTimeKind.Utc),
                            ImgPath = "assets/images/background/timer-bg.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Price = 40.0,
                            StartDate = new DateTime(2026, 3, 15, 10, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Cybersecurity Seminar",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(2283)
                        });
                });

            modelBuilder.Entity("DataLayer.Models.EventAgenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventAgendas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(3297),
                            Date = new DateTime(2024, 10, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            EventId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(3297)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(3881),
                            Date = new DateTime(2024, 10, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            EventId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(3881)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(3885),
                            Date = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            EventId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(3885)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(3889),
                            Date = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            EventId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(3889)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(3892),
                            Date = new DateTime(2025, 6, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            EventId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(3892)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(3895),
                            Date = new DateTime(2023, 11, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            EventId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(3895)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(3898),
                            Date = new DateTime(2026, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            EventId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(3898)
                        });
                });

            modelBuilder.Entity("DataLayer.Models.EventContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventAgendaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("SpeakerId")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EventAgendaId");

                    b.HasIndex("SpeakerId");

                    b.ToTable("EventContent");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(4522),
                            EventAgendaId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            SpeakerId = 1,
                            StartTime = new TimeOnly(10, 0, 0),
                            Subject = "Introduction to Python Programming",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(4522)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(5399),
                            EventAgendaId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            SpeakerId = 3,
                            StartTime = new TimeOnly(14, 0, 0),
                            Subject = "Python for Data Science",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(5400)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(5402),
                            EventAgendaId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            SpeakerId = 1,
                            StartTime = new TimeOnly(11, 0, 0),
                            Subject = "Advanced Python Techniques",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(5403)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(5404),
                            EventAgendaId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            SpeakerId = 2,
                            StartTime = new TimeOnly(14, 0, 0),
                            Subject = "Machine Learning Fundamentals",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(5404)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(5405),
                            EventAgendaId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            SpeakerId = 4,
                            StartTime = new TimeOnly(16, 0, 0),
                            Subject = "AI in Cloud Computing",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(5405)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(5407),
                            EventAgendaId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            SpeakerId = 1,
                            StartTime = new TimeOnly(9, 30, 0),
                            Subject = "Innovations in Software Development",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(5407)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(5408),
                            EventAgendaId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            SpeakerId = 2,
                            StartTime = new TimeOnly(13, 0, 0),
                            Subject = "AI-Powered Innovations",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(5408)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(5409),
                            EventAgendaId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            SpeakerId = 4,
                            StartTime = new TimeOnly(10, 0, 0),
                            Subject = "Cloud Solutions Showcase",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(5410)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(5411),
                            EventAgendaId = 6,
                            IsActive = true,
                            IsDeleted = false,
                            SpeakerId = 4,
                            StartTime = new TimeOnly(9, 0, 0),
                            Subject = "Scalable Cloud Architectures",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(5411)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(5413),
                            EventAgendaId = 6,
                            IsActive = true,
                            IsDeleted = false,
                            SpeakerId = 5,
                            StartTime = new TimeOnly(11, 30, 0),
                            Subject = "Securing Cloud Infrastructure",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(5413)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(5414),
                            EventAgendaId = 7,
                            IsActive = true,
                            IsDeleted = false,
                            SpeakerId = 5,
                            StartTime = new TimeOnly(10, 0, 0),
                            Subject = "Ethical Hacking Techniques",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(5414)
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Speaker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Speakers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Software engineering expert with over 10 years of experience.",
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 976, DateTimeKind.Utc).AddTicks(4526),
                            ImgPath = "assets/images/speakers/single-speaker.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ahmed Khaled",
                            Specialization = "Software Development",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 976, DateTimeKind.Utc).AddTicks(4526)
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Data science enthusiast and AI researcher.",
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 976, DateTimeKind.Utc).AddTicks(6480),
                            ImgPath = "assets/images/speakers/speaker-five.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Mohamed Ali",
                            Specialization = "Data Science",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 976, DateTimeKind.Utc).AddTicks(6481)
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Specialist in educational workshops with a focus on interactive learning.",
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 976, DateTimeKind.Utc).AddTicks(6485),
                            ImgPath = "assets/images/speakers/speaker-full-five.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Omar Mostafa",
                            Specialization = "Education",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 976, DateTimeKind.Utc).AddTicks(6485)
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Expert in cloud computing and distributed systems.",
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 976, DateTimeKind.Utc).AddTicks(6487),
                            ImgPath = "assets/images/speakers/speaker-full-one.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Hassan Ibrahim",
                            Specialization = "Cloud Computing",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 976, DateTimeKind.Utc).AddTicks(6487)
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Cybersecurity specialist with a focus on ethical hacking.",
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 976, DateTimeKind.Utc).AddTicks(6488),
                            ImgPath = "assets/images/speakers/speaker-full-three.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Youssef Sami",
                            Specialization = "Cybersecurity",
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 976, DateTimeKind.Utc).AddTicks(6488)
                        });
                });

            modelBuilder.Entity("DataLayer.Models.SpeakerSocialMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Platform")
                        .HasColumnType("int");

                    b.Property<int>("SpeakerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SpeakerId");

                    b.ToTable("SpeakerSocialMedias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(6052),
                            IsActive = true,
                            IsDeleted = false,
                            Platform = 2,
                            SpeakerId = 1,
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(6052),
                            Url = "https://linkedin.com/in/ahmedkhaled"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(6693),
                            IsActive = true,
                            IsDeleted = false,
                            Platform = 1,
                            SpeakerId = 1,
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(6694),
                            Url = "https://twitter.com/ahmedkhaled"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(6696),
                            IsActive = true,
                            IsDeleted = false,
                            Platform = 1,
                            SpeakerId = 2,
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(6696),
                            Url = "https://twitter.com/mohamedali"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(6760),
                            IsActive = true,
                            IsDeleted = false,
                            Platform = 3,
                            SpeakerId = 3,
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(6761),
                            Url = "https://instagram.com/omarmostafa"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(6763),
                            IsActive = true,
                            IsDeleted = false,
                            Platform = 2,
                            SpeakerId = 4,
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(6763),
                            Url = "https://linkedin.com/in/hassanibrahim"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(6765),
                            IsActive = true,
                            IsDeleted = false,
                            Platform = 1,
                            SpeakerId = 5,
                            UpdatedAt = new DateTime(2025, 6, 21, 16, 48, 10, 977, DateTimeKind.Utc).AddTicks(6765),
                            Url = "https://twitter.com/youssefsami"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Event", b =>
                {
                    b.HasOne("DataLayer.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DataLayer.Models.EventAgenda", b =>
                {
                    b.HasOne("DataLayer.Models.Event", null)
                        .WithMany("Agenda")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataLayer.Models.EventContent", b =>
                {
                    b.HasOne("DataLayer.Models.EventAgenda", "EventAgenda")
                        .WithMany("EventAgendaContents")
                        .HasForeignKey("EventAgendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Models.Speaker", "Speaker")
                        .WithMany("EventContents")
                        .HasForeignKey("SpeakerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventAgenda");

                    b.Navigation("Speaker");
                });

            modelBuilder.Entity("DataLayer.Models.SpeakerSocialMedia", b =>
                {
                    b.HasOne("DataLayer.Models.Speaker", null)
                        .WithMany("SocialMedias")
                        .HasForeignKey("SpeakerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataLayer.Models.Event", b =>
                {
                    b.Navigation("Agenda");
                });

            modelBuilder.Entity("DataLayer.Models.EventAgenda", b =>
                {
                    b.Navigation("EventAgendaContents");
                });

            modelBuilder.Entity("DataLayer.Models.Speaker", b =>
                {
                    b.Navigation("EventContents");

                    b.Navigation("SocialMedias");
                });
#pragma warning restore 612, 618
        }
    }
}
