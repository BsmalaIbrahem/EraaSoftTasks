@model CreateEventVM

<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Event /</span> Create</h4>

    <div class="row">
        <div class="col-xl">
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Event</h5>
                    <small class="text-muted float-end">Create</small>
                </div>
                
                <div class="alert alert-danger alert-dismissible" asp-validation-summary="All" role="alert">
                    
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
                <div class="card-body">
                    <form method="post" enctype="multipart/form-data">
                        <div class="mb-3">
                            <label class="form-label">Title</label>
                            <input type="text" class="form-control" asp-for="Title" placeholder="Title" />
                            <span class="text-danger" asp-validation-for="Title"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Description</label>
                            <input type="text" class="form-control" asp-for="Description" placeholder="Description" />
                            <span class="text-danger" asp-validation-for="Description"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Category</label>
                            <select class="form-select" asp-for="CategoryId" asp-items="ViewBag.Categories">
                                <option value="">Select Category</option>
                            </select>
                            <span class="text-danger" asp-validation-for="CategoryId"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Start Date</label>
                            <input class="form-control" type="datetime-local" asp-for="StartDate" />
                            <span class="text-danger" asp-validation-for="StartDate"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">End Date</label>
                            <input class="form-control" type="datetime-local" asp-for="EndDate" />
                            <span class="text-danger" asp-validation-for="EndDate"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Price</label>
                            <input type="number" class="form-control" min="0" asp-for="Price" />
                            <span class="text-danger" asp-validation-for="Price"></span>
                        </div>
                        <div class="mb-3">
                            <label for="formFile" class="form-label">Image</label>
                            <input class="form-control" type="file" id="formFile" asp-for="ImgPath" onchange="previewImage(event)" />
                            <img id="imagePreview" src="#" alt="Image Preview" class="img-thumbnail mt-2" style="display: none; max-height: 200px;" />
                            <span class="text-danger" asp-validation-for="ImgPath"></span>
                        </div>

                        <hr />

                        <h5>Agendas</h5>
                        <div id="agendasContainer">
                            @if (Model.Agendas != null && Model.Agendas.Count > 0)
                            {
                                for (int i = 0; i < Model.Agendas.Count; i++)
                                {
                                    <div class="agenda-block border p-3 mb-3">
                                        <label class="form-label">Agenda Date</label>
                                        <input type="date" name="Agendas[@i].Date" value="@Model.Agendas[i].Date.ToString("yyyy-MM-dd")" class="form-control mb-2" />

                                        <div class="agenda-contents" id="contents-@i">
                                            @for (int j = 0; j < Model.Agendas[i].Contents.Count; j++)
                                            {
                                                <div class="content-block border p-2 mb-2">
                                                    <label>Speaker ID</label>
                                                   

                                                    <select class="form-select" name="Agendas[@i].Contents[@j].SpeakerId">
                                                        
                                                        @foreach (var speaker in ViewBag.Speakers)
                                                        {
                                                            if (speaker.Value == Model.Agendas[@i].Contents[@j].SpeakerId.ToString())
                                                            {
                                                                <option value="@speaker.Value" selected>@speaker.Text</option>
                                                            }
                                                            else
                                                            {
                                                                <option value="@speaker.Value">@speaker.Text</option>
                                                            }
                                                           
                                                        }
                                                    </select>

                                                    <label>Subject</label>
                                                    <input type="text" name="Agendas[@i].Contents[@j].Subject" value="@Model.Agendas[i].Contents[j].Subject" class="form-control" />

                                                    <label>Start Time</label>
                                                    <input type="time" name="Agendas[@i].Contents[@j].StartTime" value="@Model.Agendas[i].Contents[j].StartTime.ToString("HH\\:mm")" class="form-control" />
                                                </div>
                                            }
                                        </div>
                                        <button type="button" class="btn btn-sm btn-outline-secondary mb-2" onclick="addContent(@i)">+ Add Content</button>
                                    </div>
                                }
                            }
                        </div>
                        <button type="button" class="btn btn-outline-primary mb-3" onclick="addAgenda()">+ Add Agenda</button>

                        <button type="submit" class="btn btn-primary">Submit</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const speakers = @Html.Raw(Json.Serialize(ViewBag.Speakers));
        let agendaIndex = @Model.Agendas?.Count ?? 0;

        function addAgenda() {
            const agendaHtml = `
            <div class="agenda-block border p-3 mb-3">
                <label class="form-label">Agenda Date</label>
                <input type="date" name="Agendas[${agendaIndex}].Date" class="form-control mb-2" />

                <div class="agenda-contents" id="contents-${agendaIndex}"></div>
                <button type="button" class="btn btn-sm btn-outline-secondary mb-2" onclick="addContent(${agendaIndex})">+ Add Content</button>
            </div>
            `;
            document.getElementById("agendasContainer").insertAdjacentHTML("beforeend", agendaHtml);
            agendaIndex++;
        }

                function addContent(agendaIdx) {
            const contentsContainer = document.getElementById(`contents-${agendaIdx}`);
            const contentIndex = contentsContainer.childElementCount;

            let speakerOptions = '';
            speakers.forEach(s => {
                speakerOptions += `<option value="${s.value}">${s.text}</option>`;
            });

            const contentHtml = `
            <div class="content-block border p-2 mb-2">
                <label>Speaker</label>
                <select name="Agendas[${agendaIdx}].Contents[${contentIndex}].SpeakerId" class="form-select">
                    ${speakerOptions}
                </select>

                <label>Subject</label>
                <input type="text" name="Agendas[${agendaIdx}].Contents[${contentIndex}].Subject" class="form-control" />

                <label>Start Time</label>
                <input type="time" name="Agendas[${agendaIdx}].Contents[${contentIndex}].StartTime" class="form-control" />
            </div>
            `;
            contentsContainer.insertAdjacentHTML("beforeend", contentHtml);
        }

    </script>
}

<script>
    function previewImage(event) {
        const input = event.target;
        const preview = document.getElementById('imagePreview');

        if (input.files && input.files[0]) {
            const reader = new FileReader();
            reader.onload = function (e) {
                preview.src = e.target.result;
                preview.style.display = 'block';
            };
            reader.readAsDataURL(input.files[0]);
        }
    }
</script>
