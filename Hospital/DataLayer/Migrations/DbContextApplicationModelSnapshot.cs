// <auto-generated />
using System;
using DataLayer.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class DbContextApplicationModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataLayer.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PatientEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("DataLayer.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpecializationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SpecializationId");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Dr. Ibrahim Awad is a specialist in Internal Medicine with over 10 years of experience in treating various medical conditions. He is known for his patient-centered approach and dedication to improving health outcomes.",
                            Img = "Doctors/doctor1.jpg",
                            IsDeleted = false,
                            Name = "Ibrahim Awad",
                            SpecializationId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Dr. Ahmed Essawy is a renowned Internal Medicine specialist with a focus on chronic disease management. He has a passion for educating patients about their health and empowering them to take control of their well-being.",
                            Img = "Doctors/doctor2.jpg",
                            IsDeleted = false,
                            Name = "Ahmed Essawy",
                            SpecializationId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Dr. Mohamed Ali is a dedicated Pediatrician with a love for working with children. He has extensive experience in diagnosing and treating childhood illnesses, and he is committed to providing compassionate care to his young patients.",
                            Img = "Doctors/doctor4.jpg",
                            IsDeleted = false,
                            Name = "Mohamed Ali",
                            SpecializationId = 2
                        },
                        new
                        {
                            Id = 4,
                            Description = "Dr. Nader Hamdy is a Pediatric specialist with a focus on developmental disorders. He works closely with families to ensure the best possible outcomes for children with special needs.",
                            Img = "Doctors/doctor6.jpg",
                            IsDeleted = false,
                            Name = "Nader Hamdy",
                            SpecializationId = 2
                        },
                        new
                        {
                            Id = 5,
                            Description = "Dr. Mohamed Zaky is a Pediatrician with a passion for child health and wellness. He believes in a holistic approach to healthcare, addressing both physical and emotional needs of his young patients.",
                            Img = "Doctors/doctor2.jpg",
                            IsDeleted = false,
                            Name = "Mohamed Zaky",
                            SpecializationId = 2
                        });
                });

            modelBuilder.Entity("DataLayer.Models.DoctorSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayName")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("DoctorSchedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DayName = 1,
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            DayName = 2,
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            DayName = 3,
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Id = 4,
                            DayName = 4,
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Id = 5,
                            DayName = 0,
                            DoctorId = 1,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Id = 6,
                            DayName = 3,
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Id = 7,
                            DayName = 0,
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            Id = 8,
                            DayName = 1,
                            DoctorId = 2,
                            EndTime = new TimeSpan(0, 23, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 17, 0, 0, 0)
                        },
                        new
                        {
                            Id = 9,
                            DayName = 3,
                            DoctorId = 3,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Id = 10,
                            DayName = 1,
                            DoctorId = 4,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 7, 0, 0, 0)
                        },
                        new
                        {
                            Id = 11,
                            DayName = 0,
                            DoctorId = 4,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 7, 0, 0, 0)
                        },
                        new
                        {
                            Id = 12,
                            DayName = 2,
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 7, 0, 0, 0)
                        },
                        new
                        {
                            Id = 13,
                            DayName = 1,
                            DoctorId = 5,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            IsDeleted = false,
                            StartTime = new TimeSpan(0, 7, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Specialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Specializations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Our Internal Medicine department specializes in the prevention, diagnosis, and treatment of adult diseases. Our team of experienced internists provides comprehensive care for a wide range of conditions, including chronic illnesses such as diabetes, hypertension, heart disease, and respiratory disorders.",
                            Img = "Specializations/internal_medicine.jpg",
                            IsDeleted = false,
                            Name = "Internal Medicine",
                            Slug = "InternalMedicine"
                        },
                        new
                        {
                            Id = 2,
                            Description = "At our clinic, we offer specialized pediatric care designed to support the health and development of children from infancy through adolescence. Our experienced pediatricians provide comprehensive medical services, including routine check-ups, vaccinations, developmental screenings, treatment of common childhood illnesses, and guidance for parents on nutrition, growth, and behavior.",
                            Img = "Specializations/pediatrics.jpg",
                            IsDeleted = false,
                            Name = "Pediatrics",
                            Slug = "Pediatrics"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Our surgical department is committed to delivering safe, effective, and compassionate care to patients in need of surgical treatment. We offer a wide range of surgical services—from minor procedures to complex operations—performed by skilled surgeons using the latest techniques and technology.",
                            Img = "Specializations/surgery.png",
                            IsDeleted = false,
                            Name = "Surgery",
                            Slug = "Surgery"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Appointment", b =>
                {
                    b.HasOne("DataLayer.Models.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("DataLayer.Models.Doctor", b =>
                {
                    b.HasOne("DataLayer.Models.Specialization", "specialization")
                        .WithMany("Doctors")
                        .HasForeignKey("SpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("specialization");
                });

            modelBuilder.Entity("DataLayer.Models.DoctorSchedule", b =>
                {
                    b.HasOne("DataLayer.Models.Doctor", "Doctor")
                        .WithMany("DoctorSchedules")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("DataLayer.Models.Doctor", b =>
                {
                    b.Navigation("DoctorSchedules");
                });

            modelBuilder.Entity("DataLayer.Models.Specialization", b =>
                {
                    b.Navigation("Doctors");
                });
#pragma warning restore 612, 618
        }
    }
}
